version: '3.8'

services:
  api:
    restart: always
    image: ${DOCKER_REGISTRY-}micro-media:latest
    build:
      context: ./api
      dockerfile: Dockerfile
    env_file:
      - ./api/prod.env
    ports: [] # See docker-compose.override.yml.example
    networks:
      - default
    depends_on:
      - postgres
    volumes:
      - ./api/certs:/app/certs:ro
      - ./api/api_keys.json:/app/api_keys.json:ro
      - ./api/media.yml:/app/media.yml:ro
      - ./api/storage.yml:/app/storage.yml:ro
      # - ./api/jwt_pub.pem:/app/jwt_pub.pem:ro # JWT's RS256 public key

  postgres:
    image: postgres:16-bookworm
    restart: always
    networks:
      - default
    env_file:
      - ./postgres/prod.env
    volumes:
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro # Init script
      - /var/lib/postgresql/micro-media:/var/lib/postgresql/data # Data

  imgproxy:
    image: darthsim/imgproxy:v3.2
    restart: always
    ports: [] # See docker-compose.override.yml.example
    networks:
      - default
    env_file:
      - ./imgproxy/prod.env

networks:
  default:
    driver: bridge
